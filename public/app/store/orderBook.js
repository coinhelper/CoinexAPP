/*
 * File: app/store/orderBook.js
 *
 * This file was generated by Sencha Architect version 3.0.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('CoinEX.store.orderBook', {
    extend: 'Ext.data.Store',

    requires: [
        'CoinEX.model.orderBook'
    ],

    constructor: function(cfg) {
        var me = this;
        cfg = cfg || {};
        me.callParent([Ext.apply({
            model: 'CoinEX.model.orderBook',
            storeId: 'orderBook',
            listeners: {
                load: {
                    fn: me.onStoreLoad,
                    scope: me
                }
            }
        }, cfg)]);
    },

    onStoreLoad: function(store, records, successful, eOpts) {
        var sell = Ext.getStore('sellOrderBook'),
            buy  = Ext.getStore('buyOrderBook'),
            sRecords = [],
            bRecords = [];

        sell.removeAll();
        buy.removeAll();

        store.each(function (record) {
            if (record.get('bid')) {
                bRecords.push(record);
            } else {
                sRecords.push(record);
            }
        });

        sell.add(sRecords);
        buy.add(bRecords);

        Ext.getCmp('sellordersgrid').setLoading(false);
        Ext.getCmp('buyordersgrid').setLoading(false);
    }

});