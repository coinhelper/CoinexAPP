/*
 * File: app/model/tradePairs.js
 *
 * This file was generated by Sencha Architect version 3.0.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('CoinEX.model.tradePairs', {
    extend: 'Ext.data.Model',

    requires: [
        'Ext.data.Field',
        'Ext.data.proxy.Ajax',
        'Ext.data.reader.Json',
        'CoinEX.model.currencies',
        'CoinEX.store.currencies'
    ],

    fields: [
        {
            name: 'buy_fee',
            type: 'float'
        },
        {
            name: 'sell_fee',
            type: 'float'
        },
        {
            name: 'last_price',
            type: 'int'
        },
        {
            name: 'currency_id',
            type: 'int'
        },
        {
            convert: function(v, rec) {
                var currency = Ext.getStore('currencies').findRecord('id', Number(v));
                return currency.get('name');
            },
            mapping: 'currency_id',
            name: 'currency_name',
            type: 'string'
        },
        {
            name: 'market_id',
            type: 'int'
        },
        {
            name: 'url_slug',
            type: 'string'
        },
        {
            name: 'rate_min',
            type: 'int'
        },
        {
            name: 'rate_max',
            type: 'int'
        },
        {
            name: 'currency_volume',
            type: 'int'
        },
        {
            name: 'market_volume',
            type: 'int'
        },
        {
            name: 'updated_at',
            type: 'date'
        },
        {
            convert: function(v, rec) {
                var n = Number(v/100000000);


                var info = /([\d\.]+)e-(\d+)/i.exec(n);
                if (!info) {
                    return n;
                }

                var num = info[1].replace('.', ''), numDecs = info[2] - 1;
                var output = "0.";
                for (var i = 0; i < numDecs; i++) {
                    output += "0";
                }
                output += num;

                return output;
            },
            mapping: 'last_price',
            name: 'rate',
            type: 'float'
        }
    ],

    proxy: {
        type: 'ajax',
        url: '/api/trade_pairs',
        reader: {
            type: 'json',
            root: 'trade_pairs'
        }
    }
});