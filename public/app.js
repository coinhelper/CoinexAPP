/*
 * File: app.js
 *
 * This file was generated by Sencha Architect version 3.0.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

// @require @packageOverrides
Ext.Loader.setConfig({
    enabled: true
});


Ext.application({

    requires: [
        'CoinEX.model.tradePairs',
        'CoinEX.model.currencies',
        'CoinEX.model.markets'
    ],
    models: [
        'balances',
        'currencies',
        'orders',
        'messages',
        'notifications',
        'workers',
        'markets',
        'tradePairs',
        'workerStats',
        'orderBook'
    ],
    stores: [
        'balances',
        'currencies',
        'messages',
        'workers',
        'notifications',
        'orders',
        'tradePairs',
        'workerStats',
        'sellOrderBook',
        'buyOrderBook',
        'orderBook'
    ],
    views: [
        'viewport',
        'tradesPanel',
        'balancesGrid',
        'workersGrid',
        'chatPanel',
        'buyOrdersGrid',
        'sellOrderGrid'
    ],
    controllers: [
        'chatController',
        'balancesController',
        'currenciesController'
    ],
    name: 'CoinEX',

    launch: function() {
        var timeout = 0,
            private_stores = [
                'workers',
                'workerStats',
                'balances',
                'notifications'
            ],
            me = this,
            createViewPort = function () {
                setTimeout(function () {
                    Ext.create('CoinEX.view.viewport');
                }, 1000);
            };

        Ext.getStore('notifications').on('load', createViewPort, me, {single:true});

        Ext.each(private_stores, function(value) {
            setTimeout(function () {
                Ext.getStore(value).load();
            }, timeout);
            timeout += 1000;
        });

        Ext.define('CoinEX.Utilities', {
            statics: {
                toSatoshi: function (v) {
                    var n = v/100000000,
                        info = /([\d\.]+)e-(\d+)/i.exec(n);

                    if (!info) {
                        return n;
                    }

                    var num = info[1].replace('.', ''),
                        numDecs = info[2] - 1,
                        output = "0.";

                    for (var i = 0; i < numDecs; i++) {
                        output += "0";
                    }

                    output += num;

                    return output;
                }
            }
        });
    }

});
